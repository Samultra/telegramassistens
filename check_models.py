#!/usr/bin/env python3
import requests
import os
from dotenv import load_dotenv

load_dotenv()

def check_openrouter_models():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –≤ OpenRouter"""
    api_key = os.getenv('OPENROUTER_API_KEY')
    
    if not api_key:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≤ OpenRouter...")
    print("-" * 50)
    
    try:
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        
        response = requests.get("https://openrouter.ai/api/v1/models", headers=headers, timeout=10)
        
        if response.status_code == 200:
            models = response.json()
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(models.get('data', []))} –º–æ–¥–µ–ª–µ–π")
            print()
            
            # –ò—â–µ–º –º–æ–¥–µ–ª–∏ DeepSeek
            print("ü•á –ú–æ–¥–µ–ª–∏ DeepSeek:")
            deepseek_models = []
            for model in models.get('data', []):
                model_id = model.get('id', '')
                if 'deepseek' in model_id.lower():
                    deepseek_models.append(model_id)
                    print(f"  ‚Ä¢ {model_id}")
            
            if not deepseek_models:
                print("  ‚ùå –ú–æ–¥–µ–ª–∏ DeepSeek –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            print()
            
            # –ò—â–µ–º –º–æ–¥–µ–ª–∏ CodeLlama
            print("ü•à –ú–æ–¥–µ–ª–∏ CodeLlama:")
            codellama_models = []
            for model in models.get('data', []):
                model_id = model.get('id', '')
                if 'codellama' in model_id.lower():
                    codellama_models.append(model_id)
                    print(f"  ‚Ä¢ {model_id}")
            
            if not codellama_models:
                print("  ‚ùå –ú–æ–¥–µ–ª–∏ CodeLlama –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            print()
            
            # –ò—â–µ–º –º–æ–¥–µ–ª–∏ WizardCoder
            print("ü•â –ú–æ–¥–µ–ª–∏ WizardCoder:")
            wizardcoder_models = []
            for model in models.get('data', []):
                model_id = model.get('id', '')
                if 'wizardcoder' in model_id.lower():
                    wizardcoder_models.append(model_id)
                    print(f"  ‚Ä¢ {model_id}")
            
            if not wizardcoder_models:
                print("  ‚ùå –ú–æ–¥–µ–ª–∏ WizardCoder –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            print()
            
            # –ò—â–µ–º –¥—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏
            print("üèÖ –î—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏:")
            popular_models = []
            for model in models.get('data', []):
                model_id = model.get('id', '')
                if any(name in model_id.lower() for name in ['claude', 'gpt', 'gemini', 'llama']):
                    popular_models.append(model_id)
                    print(f"  ‚Ä¢ {model_id}")
            
            if not popular_models:
                print("  ‚ùå –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            print()
            print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ ID –≤ openrouter_services.py")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_openrouter_models()

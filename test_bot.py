#!/usr/bin/env python3
import asyncio
import os
from dotenv import load_dotenv
from free_ai_services import FreeAIServices
from huggingface_client import HuggingFaceClient

load_dotenv()

async def test_ai_services():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ò–ò —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ò–ò —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    try:
        ai = FreeAIServices()
        
        # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
        print("üìù –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞...")
        response = await ai.generate_text_response("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?")
        print(f"‚úÖ –û—Ç–≤–µ—Ç: {response[:100]}...")
        
        # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞
        print("üíª –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞...")
        code = await ai.generate_code("—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞")
        print(f"‚úÖ –ö–æ–¥: {code[:100]}...")
        
        # –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        print("üìä –¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        stats = ai.get_usage_stats()
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ò–ò —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ò–ò —Å–µ—Ä–≤–∏—Å–∞—Ö: {e}")

def test_huggingface_client():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Hugging Face –∫–ª–∏–µ–Ω—Ç–∞"""
    print("ü§ó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Hugging Face –∫–ª–∏–µ–Ω—Ç–∞...")
    
    try:
        client = HuggingFaceClient()
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("üîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        if client.test_connection():
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Hugging Face —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Hugging Face")
        
        # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        print("üìã –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")
        models = client.get_available_models()
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(models)}")
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã Hugging Face –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ Hugging Face –∫–ª–∏–µ–Ω—Ç–µ: {e}")

def test_config():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
        telegram_token = os.getenv('TELEGRAM_TOKEN')
        huggingface_token = os.getenv('HUGGINGFACE_TOKEN')
        
        if telegram_token:
            print(f"‚úÖ Telegram —Ç–æ–∫–µ–Ω: {telegram_token[:20]}...")
        else:
            print("‚ùå Telegram —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        if huggingface_token:
            print(f"‚úÖ Hugging Face —Ç–æ–∫–µ–Ω: {huggingface_token[:20]}...")
        else:
            print("‚ùå Hugging Face —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        print("üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –ò–ò –±–æ—Ç–∞...")
    print("=" * 50)
    
    test_config()
    print()
    
    test_huggingface_client()
    print()
    
    asyncio.run(test_ai_services())
    print()
    
    print("‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ .env")
    print("2. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
    print("3. ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
    print("4. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python bot.py")
    print("\nüéØ –í–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å DeepSeek!")

if __name__ == "__main__":
    main()

#!/usr/bin/env python3
import asyncio
import os
from dotenv import load_dotenv
from openrouter_services import OpenRouterServices
from config_openrouter import validate_config, get_config_info

load_dotenv()

async def test_openrouter_services():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenRouter —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenRouter —Å–µ—Ä–≤–∏—Å–æ–≤...")
    print("-" * 50)
    
    ai_services = OpenRouterServices()
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("üîå –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenRouter...")
    if ai_services.test_connection():
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ OpenRouter —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ OpenRouter")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        return
    
    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —á–∞—Ç–∞)
    print("\nüìù –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ (–æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç)...")
    try:
        response = await ai_services.generate_text_response(
            "–û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏",
            max_tokens=500,
            model='deepseek'
        )
        if response.startswith("‚ùå"):
            print(f"‚ùå –û—à–∏–±–∫–∞: {response}")
        else:
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —É—Å–ø–µ—à–Ω–∞!")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
    
    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –æ–±—ã—á–Ω—ã–π —á–∞—Ç
    print("\nüíª –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ —á–∞—Ç...")
    try:
        enhanced_prompt = """–ù–∞–ø–∏—à–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π, —Ä–∞–±–æ—á–∏–π –∫–æ–¥ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–¥–∞—á–∏: —Å–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞ —á–∏—Å–ª–∞

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
1. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–º
2. –î–æ–±–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
3. –í–∫–ª—é—á–∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
4. –î–æ–±–∞–≤—å –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
5. –û–±—ä—è—Å–Ω–∏ –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
```python
# –ö–æ–¥ –∑–¥–µ—Å—å
```

## –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è"""
        
        response = await ai_services.generate_text_response(
            enhanced_prompt,
            max_tokens=1000,
            model='deepseek'
        )
        if response.startswith("‚ùå"):
            print(f"‚ùå –û—à–∏–±–∫–∞: {response}")
        else:
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ —á–µ—Ä–µ–∑ —á–∞—Ç —É—Å–ø–µ—à–Ω–∞!")
            print(f"üíª –û—Ç–≤–µ—Ç: {response[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞: {e}")
    
    # –¢–µ—Å—Ç —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ —á–∞—Ç
    print("\nüßÆ –¢–µ—Å—Ç —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ —á–∞—Ç...")
    try:
        enhanced_prompt = """–†–µ—à–∏ —Å–ª–µ–¥—É—é—â—É—é –∑–∞–¥–∞—á—É: –≤—ã—á–∏—Å–ª–∏ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ 10

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ç–≤–µ—Ç—É:
1. –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ
2. –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞
3. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–∫–ª–∞–¥–∫–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
4. –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Ä–µ—à–µ–Ω–∏—è
5. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã

–î–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π, –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏."""
        
        response = await ai_services.generate_text_response(
            enhanced_prompt,
            max_tokens=800,
            model='deepseek'
        )
        if response.startswith("‚ùå"):
            print(f"‚ùå –û—à–∏–±–∫–∞: {response}")
        else:
            print("‚úÖ –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ —á–µ—Ä–µ–∑ —á–∞—Ç —É—Å–ø–µ—à–Ω–æ!")
            print(f"üßÆ –û—Ç–≤–µ—Ç: {response[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {e}")
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —á–∞—Ç
    print("\nüîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —á–∞—Ç...")
    try:
        enhanced_prompt = """–ù–∞–π–¥–∏ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–æ—Å—É: —á—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ç–≤–µ—Ç—É:
1. –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ–º—ã
2. –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
3. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã
4. –°–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º–∏
5. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –≥–ª—É–±–æ–∫–∏–π, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç."""
        
        response = await ai_services.generate_text_response(
            enhanced_prompt,
            max_tokens=600,
            model='deepseek'
        )
        if response.startswith("‚ùå"):
            print(f"‚ùå –û—à–∏–±–∫–∞: {response}")
        else:
            print("‚úÖ –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —á–∞—Ç —É—Å–ø–µ—à–µ–Ω!")
            print(f"üîç –û—Ç–≤–µ—Ç: {response[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è
    print("\nüí¨ –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è...")
    try:
        enhanced_prompt = """–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Ä–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ç–≤–µ—Ç—É:
1. –ü–æ–ª–µ–∑–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç
2. –ï—Å–ª–∏ —ç—Ç–æ –≤–æ–ø—Ä–æ—Å - –¥–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç
3. –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—å–±–∞ - –≤—ã–ø–æ–ª–Ω–∏ –µ—ë
4. –ï—Å–ª–∏ —ç—Ç–æ —à—É—Ç–∫–∞ - –ø–æ–¥–¥–µ—Ä–∂–∏ —é–º–æ—Ä
5. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º

–î–∞–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç."""
        
        response = await ai_services.generate_text_response(
            enhanced_prompt,
            max_tokens=400,
            model='deepseek'
        )
        if response.startswith("‚ùå"):
            print(f"‚ùå –û—à–∏–±–∫–∞: {response}")
        else:
            print("‚úÖ –û–±—ã—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üí¨ –û—Ç–≤–µ—Ç: {response[:200]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏: {e}")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    try:
        stats = ai_services.get_usage_stats()
        print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!")
        print(f"üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏: {stats['free_models_used']}/{stats['free_models_limit']}")
        print(f"üí≥ –ü–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏: {stats['paid_models_used']}/{stats['paid_models_limit']}")
        print(f"üîÑ –°–±—Ä–æ—Å: {stats['reset_time']}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

def test_config():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    print("-" * 50)
    
    errors = validate_config()
    if errors:
        print("‚ùå –û—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for error in errors:
            print(f"  ‚Ä¢ {error}")
        return False
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
    
    config_info = get_config_info()
    print(f"üì± Telegram Token: {config_info['telegram_token']}")
    print(f"üîë OpenRouter API: {config_info['openrouter_api_key']}")
    print(f"üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {config_info['max_message_length']}")
    print(f"ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π: {config_info['available_models']}")
    print(f"üí∞ –õ–∏–º–∏—Ç—ã: {config_info['daily_limits']}")
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –ò–ò –±–æ—Ç–∞ —Å OpenRouter...")
    print("üí¨ –†–µ–∂–∏–º: –û–±—ã—á–Ω—ã–π —á–∞—Ç —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏!")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not test_config():
        print("\n‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–≤–µ—Ä–Ω–∞! –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return
    
    print()
    
    # –¢–µ—Å—Ç OpenRouter —Å–µ—Ä–≤–∏—Å–æ–≤
    asyncio.run(test_openrouter_services())
    
    print("\n" + "=" * 60)
    print("‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ .env")
    print("2. ‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É")
    print("3. ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements_clean.txt")
    print("4. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python bot_openrouter.py")
    print("\nüéØ –í–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ —Ä–µ–∂–∏–º–µ –æ–±—ã—á–Ω–æ–≥–æ —á–∞—Ç–∞!")
    print("üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –±–æ—Ç —Å–∞–º –ø–æ–π–º–µ—Ç, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!")
    print("üí∞ 100 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å!")

if __name__ == "__main__":
    main()
